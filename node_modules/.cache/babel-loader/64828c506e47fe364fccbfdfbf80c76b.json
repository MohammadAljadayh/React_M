{"ast":null,"code":"var _jsxFileName = \"/home/mohammed/project/React_M/src/components/Announcement.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [count, setCount] = useState('');\n  const [factorial1, setfactorial] = useState('');\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setCount(count + 1);\n      setfactorial(factorial(count + 1));\n    }, 3000);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [count]);\n\n  const handelinput = e => {\n    setfactorial(factorial(e.target.value));\n    const numValue = Number(e.target.value);\n    setCount(numValue);\n  };\n\n  const handelinput2 = e => {\n    setfactorial(factorial(e.target.value));\n    const numValue = Number(e.target.value);\n    setCount(numValue);\n  };\n\n  function factorial(n) {\n    let answer = 1;\n\n    if (n == 0 || n == 1) {\n      return answer;\n    } else {\n      for (let i = n; i >= 1; i--) {\n        answer = answer * i;\n      }\n\n      return answer;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      flexDirection: 'column',\n      display: 'flex'\n    },\n    children: [\"Insert Number \", /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"count\",\n      onChange: handelinput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" The Factorial for \", count, \" =\", factorial1, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 6\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"HZaYnmQER4I0INfk573RdVa++R8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mohammed/project/React_M/src/components/Announcement.jsx"],"names":["React","useState","useEffect","App","count","setCount","factorial1","setfactorial","timeout","setTimeout","factorial","clearTimeout","handelinput","e","target","value","numValue","Number","handelinput2","n","answer","i","flexDirection","display"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAkBC,SAAlB,QAAmC,OAAnC;;;AAII,SAASC,GAAT,GAAe;AAAA;;AAEjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACK,UAAD,EAAaC,YAAb,IAA6BN,QAAQ,CAAC,EAAD,CAA3C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMM,OAAO,GAAGC,UAAU,CAAC,MAAM;AAC/BJ,MAAAA,QAAQ,CAACD,KAAK,GAAG,CAAT,CAAR;AACAG,MAAAA,YAAY,CAACG,SAAS,CAACN,KAAK,GAAC,CAAP,CAAV,CAAZ;AAED,KAJyB,EAIvB,IAJuB,CAA1B;AAMA,WAAO,MAAM;AACXO,MAAAA,YAAY,CAACH,OAAD,CAAZ;AACD,KAFD;AAGD,GAVQ,EAUN,CAACJ,KAAD,CAVM,CAAT;;AAcA,QAAMQ,WAAW,GAAGC,CAAD,IAAK;AACtBN,IAAAA,YAAY,CAACG,SAAS,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV,CAAZ;AACA,UAAOC,QAAQ,GAAGC,MAAM,CAACJ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxB;AACAV,IAAAA,QAAQ,CAACW,QAAD,CAAR;AAGD,GAND;;AAOA,QAAME,YAAY,GAAGL,CAAD,IAAK;AACvBN,IAAAA,YAAY,CAACG,SAAS,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV,CAAZ;AACA,UAAOC,QAAQ,GAAGC,MAAM,CAACJ,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxB;AACAV,IAAAA,QAAQ,CAACW,QAAD,CAAR;AAGD,GAND;;AAQA,WAASN,SAAT,CAAmBS,CAAnB,EAAqB;AACnB,QAAIC,MAAM,GAAG,CAAb;;AACA,QAAID,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAI,CAAnB,EAAqB;AACnB,aAAOC,MAAP;AACD,KAFD,MAEK;AACH,WAAI,IAAIC,CAAC,GAAGF,CAAZ,EAAeE,CAAC,IAAI,CAApB,EAAuBA,CAAC,EAAxB,EAA2B;AACzBD,QAAAA,MAAM,GAAGA,MAAM,GAAGC,CAAlB;AACD;;AACD,aAAOD,MAAP;AACD;AACF;;AAGD,sBAEE;AAAK,IAAA,KAAK,EAAE;AAACE,MAAAA,aAAa,EAAE,QAAhB;AAA2BC,MAAAA,OAAO,EAAE;AAApC,KAAZ;AAAA,8CACgB;AAAO,MAAA,WAAW,EAAC,OAAnB;AAA2B,MAAA,QAAQ,EAAEX;AAArC;AAAA;AAAA;AAAA;AAAA,YADhB,eAIC;AAAA,wCAAuBR,KAAvB,QAAgCE,UAAhC;AAAA;AAAA;AAAA;AAAA;AAAA,YAJD;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAYD;;GA3DYH,G;;KAAAA,G;AAgEX,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { useState,useEffect } from 'react';\n\n\n\n    function App() {\n\n  const [count, setCount] = useState('');\n  const [factorial1, setfactorial] = useState('');\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setCount(count + 1);\n      setfactorial(factorial(count+1))\n\n    }, 3000);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [count]);\n\n\n\n  const handelinput= (e)=>{\n    setfactorial(factorial(e.target.value))\n    const  numValue = Number(e.target.value);\n    setCount(numValue);\n\n\n  }\n  const handelinput2= (e)=>{\n    setfactorial(factorial(e.target.value))\n    const  numValue = Number(e.target.value);\n    setCount(numValue);\n  \n   \n  }\n\n  function factorial(n){\n    let answer = 1;\n    if (n == 0 || n == 1){\n      return answer;\n    }else{\n      for(let i = n; i >= 1; i--){\n        answer = answer * i;\n      }\n      return answer;\n    }  \n  }\n\n\n  return (\n\n    <div style={{flexDirection: 'column' , display: 'flex'}}>\n      Insert Number <input placeholder='count' onChange={handelinput} />\n\n\n     <p> The Factorial for {count} ={factorial1} </p>   \n\n\n    </div>\n\n  );\n}\n  \n    \n  \n\n  export default App;"]},"metadata":{},"sourceType":"module"}