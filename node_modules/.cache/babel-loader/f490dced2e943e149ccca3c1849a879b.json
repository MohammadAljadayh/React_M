{"ast":null,"code":"var _jsxFileName = \"/home/mohammed/project/React_M/src/components/Announcement.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [count, setCount] = useState();\n  const [factorial1, setfactorial] = useState();\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setCount(count + 1);\n      setfactorial(factorial(count + 1));\n    }, 3000);\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [count]);\n\n  const handelinput = e => {\n    const numValue = parseInt(document.querySelector('input').value);\n    setfactorial(factorial(numValue));\n    setCount(numValue);\n  };\n\n  function factorial(n) {\n    let answer = 1;\n\n    if (n === 0 || n === 1) {\n      return answer;\n    } else {\n      for (let i = n; i >= 1; i--) {\n        answer = answer * i;\n      }\n\n      return answer;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      flexDirection: 'column',\n      display: 'flex'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      for: \"ticketNum\",\n      children: \"Insert Number:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"ticketNum\",\n      type: \"number\",\n      name: \"ticketNum\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      placeholder: \"count\",\n      onClick: handelinput,\n      children: \"Calculate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" The Factorial for \", count, \" =\", factorial1, \" \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      component: \"form\",\n      sx: {\n        '& > :not(style)': {\n          m: 1,\n          width: '25ch'\n        }\n      },\n      noValidate: true,\n      autoComplete: \"off\",\n      children: /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"c\",\n        label: \"Outlined\",\n        variant: \"outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 6\n    }, this), /*#__PURE__*/_jsxDEV(Stack, {\n      spacing: 2,\n      direction: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        variant: \"text\",\n        children: \"Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        children: \"Contained\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        children: \"Outlined\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 2\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"aLS5nb4x7/aKqRtsz8fpEtta2ow=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mohammed/project/React_M/src/components/Announcement.jsx"],"names":["React","useState","useEffect","Box","TextField","Stack","Button","App","count","setCount","factorial1","setfactorial","timeout","setTimeout","factorial","clearTimeout","handelinput","e","numValue","parseInt","document","querySelector","value","n","answer","i","flexDirection","display","m","width"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { useState,useEffect } from 'react';\nimport Box from '@mui/material/Box';\nimport TextField from '@mui/material/TextField';\nimport Stack from '@mui/material/Stack';\nimport Button from '@mui/material/Button';\n\n  function App() {\n\n  const [count, setCount] = useState();\n  const [factorial1, setfactorial] = useState();\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setCount(count + 1);\n      setfactorial(factorial(count+1))\n\n    }, 3000);\n\n    return () => {\n      clearTimeout(timeout);\n    };\n  }, [count]);\n\n\n\n  const handelinput= (e)=>{\n    const numValue = parseInt(document.querySelector('input').value);\n    setfactorial(factorial(numValue));\n    setCount(numValue);\n\n  }\n\n\n  function factorial(n){\n    let answer = 1;\n    if (n === 0 || n === 1){\n      return answer;\n    }else{\n      for(let i = n; i >= 1; i--){\n        answer = answer * i;\n      }\n      return answer;\n    }  \n  }\n\n\n  return (\n\n    <div style={{flexDirection: 'column' , display: 'flex'}}>\n\n      <label for=\"ticketNum\">Insert Number:</label>\n<input id=\"ticketNum\" type=\"number\" name=\"ticketNum\" />\n\n      <button placeholder='count' onClick={handelinput}>Calculate</button>\n     <p> The Factorial for {count} ={factorial1} </p>   \n\n     <Box\n    component=\"form\"\n    sx={{\n      '& > :not(style)': { m: 1, width: '25ch' },\n    }}\n    noValidate\n    autoComplete=\"off\"\n  >\n    <TextField id=\"c\" label=\"Outlined\" variant=\"outlined\" />\n </Box>\n <Stack spacing={2} direction=\"row\">\n      <Button variant=\"text\">Text</Button>\n      <Button variant=\"contained\">Contained</Button>\n      <Button variant=\"outlined\">Outlined</Button>\n    </Stack>\n    </div>\n\n\n  );\n}\n  \n    \n  \n\n  export default App;"]},"metadata":{},"sourceType":"module"}