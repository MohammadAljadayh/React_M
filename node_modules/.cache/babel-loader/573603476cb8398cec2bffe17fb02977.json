{"ast":null,"code":"var _jsxFileName = \"/home/mohammed/project/React_M/src/components/Announcement.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [count, setCount] = useState('');\n\n  const handelinput = () => {\n    console.log(count);\n  };\n\n  let answer = 1;\n\n  function factorial(n) {\n    if (n == 0 || n == 1) {\n      return answer;\n    } else {\n      for (var i = n; i >= 1; i--) {\n        answer = answer * i;\n      }\n\n      return answer;\n    }\n  }\n\n  let n = 4;\n  answer = factorial(n);\n  console.log(\"The factorial of \" + n + \" is \" + answer);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      flexDirection: 'column',\n      display: 'flex'\n    },\n    children: [\"Insert Number \", /*#__PURE__*/_jsxDEV(\"input\", {\n      placeholder: \"count\",\n      onChange: e => setCount(factorial(e.target.value))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 21\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => handelinput(),\n      children: \"Click me!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), count ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\" Result = \", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 19\n    }, this) : '', /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Result=\", count]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"I07FlEJZ+wHHAreSZogk02iydSw=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/mohammed/project/React_M/src/components/Announcement.jsx"],"names":["React","useState","App","count","setCount","handelinput","console","log","answer","factorial","n","i","flexDirection","display","e","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,OAAzB;;;AAII,SAASC,GAAT,GAAe;AAAA;;AACjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMI,WAAW,GAAE,MAAI;AAErBC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ;AACD,GAHD;;AAIA,MAAIK,MAAM,GAAG,CAAb;;AACA,WAASC,SAAT,CAAmBC,CAAnB,EAAqB;AAEnB,QAAIA,CAAC,IAAI,CAAL,IAAUA,CAAC,IAAI,CAAnB,EAAqB;AACnB,aAAOF,MAAP;AACD,KAFD,MAEK;AACH,WAAI,IAAIG,CAAC,GAAGD,CAAZ,EAAeC,CAAC,IAAI,CAApB,EAAuBA,CAAC,EAAxB,EAA2B;AACzBH,QAAAA,MAAM,GAAGA,MAAM,GAAGG,CAAlB;AACD;;AACD,aAAOH,MAAP;AACD;AACF;;AACD,MAAIE,CAAC,GAAG,CAAR;AACAF,EAAAA,MAAM,GAAGC,SAAS,CAACC,CAAD,CAAlB;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBG,CAAtB,GAA0B,MAA1B,GAAmCF,MAA/C;AACA,sBAEE;AAAK,IAAA,KAAK,EAAE;AAACI,MAAAA,aAAa,EAAE,QAAhB;AAA2BC,MAAAA,OAAO,EAAE;AAApC,KAAZ;AAAA,8CACgB;AAAO,MAAA,WAAW,EAAC,OAAnB;AAA2B,MAAA,QAAQ,EAAEC,CAAC,IAAGV,QAAQ,CAACK,SAAS,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAV;AAAjD;AAAA;AAAA;AAAA;AAAA,YADhB,eAKA;AAAQ,MAAA,OAAO,EAAE,MAAMX,WAAW,EAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YALA,EASMF,KAAK,gBAAG;AAAA,+BAAcA,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA,YAAH,GAAwC,EATnD,eAUA;AAAA,4BAAWA,KAAX;AAAA;AAAA;AAAA;AAAA;AAAA,YAVA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAiBD;;GAvCYD,G;;KAAAA,G;AA4CX,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport { useState } from 'react';\n\n\n\n    function App() {\n  const [count, setCount] = useState('');\n\n  const handelinput= ()=>{\n\n    console.log(count);\n  }\n  let answer = 1;\n  function factorial(n){\n  \n    if (n == 0 || n == 1){\n      return answer;\n    }else{\n      for(var i = n; i >= 1; i--){\n        answer = answer * i;\n      }\n      return answer;\n    }  \n  }\n  let n = 4;\n  answer = factorial(n)\n  console.log(\"The factorial of \" + n + \" is \" + answer);\n  return (\n\n    <div style={{flexDirection: 'column' , display: 'flex'}}>\n      Insert Number <input placeholder='count' onChange={e=> setCount(factorial(e.target.value))} />\n\n\n \n    <button onClick={() => handelinput()}>\n      Click me!\n\n    </button>\n    {     count ? <p> Result = {count}</p>      :      ''    } \n    <p>Result={count}</p>\n\n    </div>\n\n  );\n}\n  \n    \n  \n\n  export default App;"]},"metadata":{},"sourceType":"module"}